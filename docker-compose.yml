version: '3.8'

services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:7.0
    container_name: ai-pixel-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ai-pixel-tracker
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - ai-pixel-network

  # Redis para cache (opcional)
  redis:
    image: redis:7.2-alpine
    container_name: ai-pixel-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ai-pixel-network

  # Servidor de la API
  api-server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-pixel-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/ai-pixel-tracker?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this
      - PORT=3000
      - ALLOWED_ORIGINS=https://yourdomain.com,https://dashboard.yourdomain.com
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server/logs:/app/logs
    networks:
      - ai-pixel-network

  # Dashboard frontend
  dashboard:
    build: 
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: ai-pixel-dashboard
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.yourdomain.com
    ports:
      - "3001:3000"
    depends_on:
      - api-server
    networks:
      - ai-pixel-network

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: ai-pixel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-server
      - dashboard
    networks:
      - ai-pixel-network

volumes:
  mongodb_data:
  redis_data:

networks:
  ai-pixel-network:
    driver: bridge
